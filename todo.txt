To do before release:
* at the top of search results window, show "searching for 'xxx' in 'xxx' text
* when printing matched file names, do it relative to the directory being
  searched
* when launched with cmd-line arguments, go straight to search view
* a way to stop search (e.g. when user press a button in the ui). Possibly by
  returning BOOL from delegate methods, returning NO would mean "stop"
* detect utf encodings that have bom (see e.g. http://svn.cocoasourcecode.com/FolderSweep/AppController.m)
* indicate that entered directory doesn't exist + live validation while the user types
* cleanup menu items
* analyze stats from auto-updates
* search results should be NSOutlineView with collapsible per-file entries
* pressing enter in recent search list does something weird (hides the window)
* the layout hangs when showing results of searching "line" in build-stat.dat.
  Callstack of hanged part below. Need to figure out if can prevent this
  (limit max line length? Can it be caused by some specific characters?)

#0  0x00007fff86da7b46 in -[NSATSGlyphStorage _widthForStringRange:] ()
#1  0x00007fff86c54664 in -[NSATSLineFragment layoutForStartingGlyphAtIndex:characterIndex:minPosition:maxPosition:lineFragmentRect:] ()
#2  0x00007fff86c52b67 in -[NSATSTypesetter _layoutLineFragmentStartingWithGlyphAtIndex:characterIndex:atPoint:renderingContext:] ()
#3  0x00007fff86ce75b7 in -[NSATSTypesetter layoutParagraphAtPoint:] ()
#4  0x00007fff87189d9e in -[NSTypesetter _layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:] ()
#5  0x00007fff86ce6d66 in -[NSTypesetter layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:] ()
#6  0x00007fff86ce6c4f in -[NSATSTypesetter layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:] ()
#7  0x00007fff86ce522c in -[NSLayoutManager(NSPrivate) _fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:] ()
#8  0x00007fff86ce4bf4 in -[NSLayoutManager(NSPrivate) _fillLayoutHoleAtIndex:desiredNumberOfLines:] ()
#9  0x00007fff86ce3873 in _NSFastFillAllLayoutHolesUpToEndOfContainerForGlyphIndex ()
#10 0x00007fff86ce33e9 in -[NSLayoutManager textContainerForGlyphAtIndex:effectiveRange:] ()
#11 0x00007fff86bf8f42 in -[NSLayoutManager glyphRangeForTextContainer:] ()
#12 0x00007fff86d4ad51 in -[NSStringDrawingTextStorage drawTextContainer:withRect:graphicsContext:baselineMode:scrollable:padding:] ()
#13 0x00007fff86c96318 in _NSStringDrawingCore ()
#14 0x00007fff86c94fd7 in _NSDrawTextCell ()
#15 0x00007fff86c9ccd8 in -[NSTableView drawRow:clipRect:] ()
#16 0x00007fff86c9c5cb in -[NSTableView drawRowIndexes:clipRect:] ()
#17 0x00007fff86c9af78 in -[NSTableView drawRect:] ()
#18 0x00007fff86c9105e in -[NSView _drawRect:clip:] ()
#19 0x00007fff86c8e834 in -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] ()
#20 0x00007fff86c8f1bf in -[NSView _recursiveDisplayRectIfNeededIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:topView:] ()
#21 0x00007fff86c8a6bf in -[NSView _displayRectIgnoringOpacity:isVisibleRect:rectIsVisibleRectForView:] ()
#22 0x00007fff86c03f37 in -[NSView displayIfNeeded] ()
#23 0x00007fff86cd2a6f in -[NSClipView _immediateScrollToPoint:] ()
#24 0x00007fff86cd1b35 in -[NSClipView scrollToPoint:] ()
#25 0x00007fff86d0eb1e in -[NSScrollView scrollClipView:toPoint:] ()
#26 0x00007fff86c4cb00 in -[NSClipView _scrollTo:animate:] ()
#27 0x00007fff86d2956b in -[NSScrollView _doScroller:hitPart:multiplier:] ()
#28 0x00007fff86d2909a in -[NSApplication sendAction:to:from:] ()
#29 0x00007fff86d28ff9 in -[NSControl sendAction:to:] ()
#30 0x00007fff86d28f84 in -[NSScroller sendAction:to:] ()
#31 0x00007fff87079434 in -[NSScroller trackPagingArea:] ()
#32 0x00007fff87078a64 in -[NSScroller mouseDown:] ()
#33 0x00007fff86ccd68f in -[NSWindow sendEvent:] ()


Things to do:
* handle multiple search locations (search_options.search_loc needs to be a list)
* remember list of all searches. Remembers search pattern, list
  of files/directories to search, maybe also search results
* show list of recent searches in the NSTableView
* build test harness to simulate ack. Will need to change the way tests are
  executed in the harness. Currently invocation looks like:
  perl -T ./capture-stderr stderr.log \.\/ack \-\-noenv Sue \-1 \-h \-\-text t\/text
  i.e. ack must be perl file. I would have to modify capture-stderr and run_ack_with_stderr
  in Util.pm. Alternatively, I can modify test harness to capture executed commands
  and write another tool that runs those commands with ack and the same commands
  with vack and verifies that the results are the same
* detect if outputing to screen or not and based on that set the default flag
  about wheter or not to show colored output; this can be over-written with
  --[no-][color|colour]
* parse ack config file for compatibility
* search large files (bigger than, say, 1MB) at the end (to improve user experience)
* multi-threaded search (assuming we're CPU bound on searches, not I/O bound)
* even nicer way to show recent searches (header like in xcode's startup screen recent projects list)
* 'Move to Application folder' http://www.potionfactory.com/node/251

Done:
2009-12-12
 * start work on launch VisualAck from vack
 * increase the size of recent searches table view row to fit 2 lines
   (in preparation for displaying it in a nicer way)
 * launch UI from vack if '-' argument was given
 * before trying to create vack link, show a dialog explaining that (like google app engine runtime)

2009-12-10
 * don't add duplicate items to recent searches
 * swap views in one window instead of using two windows
 * move recentSearches logic to SearchWindowController
 * better colors for highlighting lines, line numbers
 * show search stats at the bottom view (searched, skiped files, skipped directories)
 * add indifinite search progress indicator
 * add another delegate method to indicate end of searche

2009-12-09:
 * basic highlighting of search results in UI

2009-12-07
 * when recent search selected - copy data to text fields
 * when recent search double-clicked - start the search
 * change the search text field to NSSearchField

2009-12-04
 * remembering recent searches
 * allow tabbing between fields in search window
 * when closing search results window, show search window
 * open search results window in the same place where search window was
 * show recent searches in SearchWindow

2009-12-03
 * search should be done in a background threaded

2009-12-02
 * start on showing search results

2009-12-01
 * send number of searches with Sparkle updates
 * increase number of searches from within vack
 * started on showing search results

2009-11-29
 * fighting with Sparkle to enable sending profile and uniqueId

2009-11-26:
 * sumbit crash reports to a website
 * if doesn't exist, create link /usr/local/bin/vack to wherever vack lives

2009-11-24:
 * work on submitting crash reports to a website

2009-11-22:
 * UserVoice page for VisualAck
 * write a simple web page about the program
 * build script
 * auto-updates with Sparkle

2009-11-10
 * limit what is searched if there are files/directories given on cmd-line
 * support for multiple matches on one line

2009-11-03
 * notify delegate about matches; show filename colored; show matches
  colored
 * improve FileSearchProtocol; parse search term and search location 
    from cmd-line args

2009-10-24
 * start on FileSearchIterator
 * better tests for [FileLineIterator getNextLine] that also check content
 * fixed [FileLineIterator getNextLine]

2009-10-23
 * work on unit tests for FileLineIterator

2009-10-08
 * started on loc.py

2009-10-07
 * FileLineIterator

2009-10-02
 * list of default dirs to ignore from ack
 * interpret and observe --ignore-dir=$dir and --no-ignore-dir=$dir cmd line arguments

2009-10-01
 * started on scaning files

2009-09-23
 * started on vack cmd-line program
 * understanding ack test suite

2009-09-22
 * imported ack test suite

2009-09-21
 * disable search button if search term or dir is not yet selected
 * initial state of search directory (~)

2009-09-18
 * started the project
